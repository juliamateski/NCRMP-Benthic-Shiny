"0","server <- function(input, output) {"
"0","  "
"0","output$cover_caption <- renderText({"
"0","  caption_text <- paste(""Mean"", isolate(input$cover), ""percent cover Â± SE in"", isolate(input$region), ""in"", isolate(input$year))"
"0","  return(caption_text)"
"0","})"
"0","  "
"0","  "
"0","  output$bleach <- renderPlot({"
"0","    "
"0","    make_size_plot <- function(x, y = ""length"") {"
"0","  "
"0","  if (y == ""size"") {"
"0","    domain_estimates = x$size_domain_est"
"0","    demos = x$size_3d_demos"
"0","    name = ""Binned Surface Area in""~cm^3"
"0","  }"
"0","  "
"0","  if (y == ""length"") {"
"0","    domain_estimates = x$length_domain_est"
"0","    demos = x$length_demos"
"0","    name = ""Length (cm)"""
"0","  }"
"0","  "
"0","  uniq_s <- unique(domain_estimates$SPECIES_CD) "
"0","  "
"0","  for (i in uniq_s) {"
"0","    "
"0","    domain_sub = subset(domain_estimates, SPECIES_CD == i)"
"0","    demos_sub = subset(demos, SPECIES_CD == i)"
"0","    n_bins = max(demos_sub$n_bins)"
"0","    text_size = 11"
"0","    angle = dplyr::if_else(n_bins > 6 | y == ""size"", 45, 0)"
"0","    hjust = dplyr::if_else(angle == 45, 1, 0.5)"
"0","    min = min(demos_sub$min)"
"0","    bin_width = min(demos_sub$bin_width)"
"0","    small = dplyr::if_else(n_bins > 4, 0, 1)"
"0","    "
"0","    num_vec = seq_len(max(domain_sub$bin_num))"
"0","    "
"0","    x$bin_low = dplyr::if_else(x$bin_num == 1, 4, round(x$min + (x$bin_width * (x$bin_num-1))+2,2))"
"0",""
"0","    x$bin_high = round(x$bin_width +x$min + (x$bin_width * (x$bin_num-1))+1,2)"
"0","    "
"0","    lab_vec = paste(x$bin_low, x$bin_high, sep = ""-"")"
"0","    "
"0","    lab_vec = paste("
"0","      format("
"0","        x = dplyr::if_else(num_vec == 1, 4, round(min + (bin_width * (num_vec-1))+2,small)),"
"0","        nsmall = small"
"0","        ),"
"0","        #""-"","
"0","      format("
"0","        x = round(bin_width + min + (bin_width * (num_vec-1))+1,small),"
"0","        nsmall = small"
"0","      ),"
"0","      sep = ""-"""
"0","      )"
"0","    "
"0","    print("
"0","      ggplot(data = domain_sub, aes(x = as.integer(bin_num), y = avtally, "
"0","                                    fill = YEAR)) +"
"0","    geom_bar(stat=""identity"", position = ""dodge2"", width = .9, color=""black"", size=.5) +"
"0","     theme_Publication(base_size = 20) + "
"0","  #    facet_wrap(~facet_label, nrow=4, scales = ""free"") +"
"0","        labs("
"0","          y = ""Frequency"") +"
"0","        scale_x_continuous(name = name, "
"0","                           breaks = seq_along(lab_vec),"
"0","                           labels = lab_vec) +"
"0","        ggtitle(unique(domain_sub$SPECIES_NAME)) +"
"0","        theme(axis.text.x = element_text(size = text_size, angle = angle, "
"0","                                         hjust = hjust),"
"0","             legend.key = element_rect(colour = NA),"
"0","             legend.position = ""bottom"","
"0","             legend.direction = ""horizontal"","
"0","             legend.key.size= unit(0.5, ""cm""),"
"0","             legend.margin = margin(0,0,0,0, ""cm"")"
"0","             #,"
"0","             #legend.title = element_text(face=""italic"")"
"0","             ) +"
"0","        scale_fill_manual(values=c('steelblue3','springgreen3','gold1')))"
"0","  } "
"0","}"
"0","    "
"0","    tmp <- NCRMP_make_size_bins(region = ""Tortugas"","
"0","                            project = ""NCRMP"","
"0","                            years = c(2014, 2018, 2022),"
"0","                            species_filter = analyzed_species)"
"0","    "
"0","    make_size_plot(tmp, ""length"")"
"0","    "
"0","    "
"0","    spp1 <- ""ACR CERV"" # Go in alphabetical order"
"0",""
"0","# Length"
"0","domain_estimates = tmp$length_domain_est %>%"
"0","  dplyr::mutate(YEAR = dplyr::case_when(YEAR == ""2020"" ~ ""2021"", TRUE ~ as.character(YEAR)),"
"0","                YEAR = as.factor(YEAR))"
"0","demos = tmp$length_demos %>%"
"0","  dplyr::mutate(YEAR = dplyr::case_when(YEAR == ""2020"" ~ ""2021"", TRUE ~ as.character(YEAR)),"
"0","                YEAR = as.factor(YEAR))"
"0","name = ""Length (cm)"""
"0","  "
"0","domain_sub = subset(domain_estimates, SPECIES_CD == spp1)"
"0","demos_sub = subset(demos, SPECIES_CD == spp1)"
"0",""
"0","domain_sub <-  domain_sub %>%"
"0","    # add 0s in for species not observed"
"0","    tidyr::expand(., REGION, SPECIES_NAME, SPECIES_CD, YEAR, bin_num) %>%"
"0","    # connect back to demo_data to fill in with NAs"
"0","    dplyr::full_join(., domain_sub,"
"0","                     by = c('REGION', 'SPECIES_NAME',""SPECIES_CD"", ""YEAR"", ""bin_num"")) %>%"
"0","    # make a presence/absence column"
"0","    dplyr::mutate(avtally = ifelse(is.na(avtally), 0, avtally),"
"0","                  bin_name = dplyr::case_when(bin_num == 6 ~ ""106-125"", TRUE ~ as.character(bin_name)))"
"0",""
"0","    #update this every year to make sure includes all size bins"
"0","    "
"0","    "
"0","    n_bins = max(demos_sub$n_bins)"
"0","    text_size = 11"
"0","    #angle = dplyr::if_else(n_bins > 6 | y == ""size"", 45, 0)"
"0","    angle = 45"
"0","    hjust = dplyr::if_else(angle == 45, 1, 0.5)"
"0","    min = min(demos_sub$min)"
"0","    bin_width = min(demos_sub$bin_width)"
"0","    small = dplyr::if_else(n_bins > 4, 0, 1)"
"0","    "
"0","    num_vec = seq_len(max(domain_sub$bin_num))"
"0","    "
"0","    lab_vec = paste("
"0","      format("
"0","        x = dplyr::if_else(num_vec == 1, 4, round(min + (bin_width * (num_vec-1))+2,small)),"
"0","        nsmall = small"
"0","        ),"
"0","        #""-"","
"0","      format("
"0","        x = round(bin_width + min + (bin_width * (num_vec-1))+1,small),"
"0","        nsmall = small"
"0","      ),"
"0","      sep = ""-"""
"0","      )"
"0","    "
"0","    p1 <- ggplot(data = domain_sub, "
"0","                 aes(x = as.integer(bin_num),"
"0","                     y = avtally, fill = YEAR)) +"
"0","      "
"0","      geom_bar(stat=""identity"", position = ""dodge2"", width = .9, color=""black"", size=.5) +"
"0","      "
"0","      theme_Publication(base_size = 20) + "
"0","      "
"0","      facet_wrap(~SPECIES_NAME) +"
"0","      "
"0","      labs( y = """", x = """") +"
"0","      "
"0","      scale_x_continuous(#name = name, "
"0","                         breaks = seq_along(lab_vec),"
"0","                         labels = lab_vec) +"
"0","      scale_y_continuous(expand = c(0, 0), "
"0","                     limits = c(0, 3)) + #UPDATE based on limits each year"
"0","      "
"0","      #ggtitle(unique(domain_sub$SPECIES_NAME)) +"
"0","      "
"0","      theme(axis.text.x = element_text(size = text_size, angle = angle, "
"0","                                       hjust = hjust),"
"0","            #legend.key = element_rect(colour = NA),"
"0","            legend.position = ""none"","
"0","            # legend.direction = ""horizontal"","
"0","            # legend.key.size= unit(0.5, ""cm""),"
"0","            # legend.margin = margin(0,0,0,0, ""cm"")"
"0","            plot.margin = unit(c(t = 1, r = 2, b = -2, l = 0),""mm""),"
"0","            strip.text = element_text(face = ""italic"")) +"
"0","      scale_fill_manual(values=c('deepskyblue4','springgreen3','gold1'))"
"0","  "
"0"," return(p1) "
"0",""
"0","  })"
"0","  "
"0","  output$map <- renderLeaflet({"
"0","    "
"0","   habitat_lookup <- data.frame("
"0","  REGION = c("
"0","    ""FLK"", ""FLK"", ""FLK"", ""FLK"", ""FLK"", ""FLK"", ""FLK"", ""FLK"", ""FLK"", "
"0","    ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", ""Tortugas"", "
"0","    ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"", ""SEFCRI"""
"0","  ),"
"0","  HABITAT_CD = c("
"0","    ""CONT_HR"", ""CONT_LR"", ""CONT_MR"", ""ISOL_HR"", ""ISOL_LR"", ""ISOL_MR"", ""RUBB_LR"", ""SPGR_HR"", ""SPGR_MR"","
"0","    ""CONT_HR"", ""CONT_LR"", ""CONT_MR"", ""ISOL_HR"", ""ISOL_LR"", ""ISOL_MR"", ""RUBB_LR"", ""SPGR_HR"", ""SPGR_MR"","
"0","    ""APRD"", ""CPDP"", ""CPSH"", ""DPRC"", ""LIRI"", ""LIRM"", ""LIRO"", ""PTCH"", ""RGDP"", ""RGSH"", ""SCRS"", ""SPGR"""
"0","  ),"
"0","  HABITAT_TYPE = c("
"0","    ""Contiguous reef, non-spur-groove, high vertical relief"","
"0","    ""Contiguous reef, non-spur-groove, low vertical relief"","
"0","    ""Contiguous reef, non-spur-groove, moderate vertical relief"","
"0","    ""Isolated, patchy reef structures, high vertical relief"","
"0","    ""Isolated, patchy reef structures, low vertical relief"","
"0","    ""Isolated, patchy reef structures, moderate vertical relief"","
"0","    ""Reef rubble, low vertical relief"","
"0","    ""Spur-groove reef, high vertical relief"","
"0","    ""Spur-groove reef, moderate vertical relief"","
"0","    ""Contiguous reef, non-spur-groove, high vertical relief"","
"0","    ""Contiguous reef, non-spur-groove, low vertical relief"","
"0","    ""Contiguous reef, non-spur-groove, moderate vertical relief"","
"0","    ""Isolated, patchy reef structures, high vertical relief"","
"0","    ""Isolated, patchy reef structures, low vertical relief"","
"0","    ""Isolated, patchy reef structures, moderate vertical relief"","
"0","    ""Reef rubble, low vertical relief"","
"0","    ""Spur-groove reef, high vertical relief"","
"0","    ""Spur-groove reef, moderate vertical relief"","
"0","    ""Aggregated Patch Reef Deep"","
"0","    ""Colonized Pavement Deep"","
"0","    ""Colonized Pavement Shallow"","
"0","    ""Deep Ridge Complex"","
"0","    ""Linear Reef Inner"","
"0","    ""Linear Reef Middle"","
"0","    ""Linear Reef Outer"","
"0","    ""Patch Reef"","
"0","    ""Ridge Deep"","
"0","    ""Ridge Shallow"","
"0","    ""Scattered Coral and Rock in Sand"","
"0","    ""Spur and Groove"""
"0","  )"
"0",")"
"0","  "
"0","  data <- reactive({"
"0","    if (input$map_region == ""Southeast Florida"") {"
"0","      full_join(NCRMP_SEFCRI_2014_22_density_site, NCRMP_SEFCRI_2014_22_cover_region)"
"0","    } else if (input$map_region == ""Dry Tortugas"") {"
"0","      full_join(NCRMP_Tort_2014_22_density_site, NCRMP_Tort_2014_22_cover_region)"
"0","    } else if (input$map_region == ""Florida Keys"") {"
"0","      full_join(NCRMP_FLK_2014_22_density_site, NCRMP_FLK_2014_22_cover_region)"
"0","    }"
"0","  })"
"0",""
"0","  filtered_data <- reactive({"
"0","    req(input$year_selector)"
"0","    data() %>%"
"0","       filter(YEAR %in% input$year_selector) %>%"
"0","      distinct(PRIMARY_SAMPLE_UNIT, .keep_all = TRUE) %>%"
"0","      select(REGION, PRIMARY_SAMPLE_UNIT, YEAR, HABITAT_CD, LAT_DEGREES, LON_DEGREES, DENSITY, avCvr) %>%"
"0","      mutate(across(c(LAT_DEGREES, LON_DEGREES), as.numeric)) %>%"
"0","      left_join(habitat_lookup, by = c(""REGION"", ""HABITAT_CD""))"
"0","  })"
"0",""
"0","  leaflet_map <- leaflet(filtered_data()) %>%"
"0","    addProviderTiles(providers$Esri.OceanBasemap) %>%"
"0","    addCircleMarkers("
"0","      lat = ~LAT_DEGREES,"
"0","      lng = ~LON_DEGREES,"
"0","      radius = 5,"
"0","      fillOpacity = 0.8,"
"0","      fillColor = ~colorFactor(as.factor(YEAR), palette = ""Set3""),"
"0","      stroke = FALSE,"
"0","      popup = ~paste("
"0","        ""Year: "", YEAR, ""<br>"","
"0","        ""Habitat Code: "", HABITAT_CD, ""<br>"","
"0","        ""Habitat Type: "", HABITAT_TYPE, ""<br>"","
"0","        ""Total Coral Density: "", DENSITY, ""<br>"","
"0","        ""Total Hard Coral Cover: "", round(avCvr, 2)"
"0","      )"
"0","    ) "
"0",""
"0",""
"0","  leaflet_map"
"0","})"
"0","  "
"0","  output$coral_plot <- renderPlot({"
"0","    "
"0","    selected_region <- input$coral_region"
"0","    selected_year <- as.character(input$coral_year)"
"0","    species_list <- input$coral_species"
"0","  "
"0","    "
"0","    if (selected_region == ""Dry Tortugas"") {"
"0","      "
"0","      Tort_weightedmeans <- NCRMP_Tort_Occ_Den_CV"
"0","      #, YEAR == max(NCRMP_Tort_Occ_Den_CV$YEAR)) "
"0"," "
"0","      om <- NCRMP_DRM_calculate_mortality(region = ""Tortugas"", project = ""NCRMP_DRM"")"
"0","      Tort_om_spp <- om$Domain_est_old_mort_species"
"0","      Tort_rm_spp <- om$Domain_est_rec_mort_species"
"0","  "
"0","      s <- NCRMP_DRM_calculate_mean_colony_size(region = ""Tortugas"", project = ""NCRMP_DRM"")"
"0","      Tort_s_spp <- s$Domain_est_species"
"0","      "
"0","      generateCoralPlot(""Dry Tortugas"", selected_year, Tort_weightedmeans,Tort_om_spp, Tort_s_spp, Tort_rm_spp, species_list)"
"0","    }"
"0","    "
"0","    "
"0","    else if (selected_region == ""Southeast Florida"") {"
"0","  SEFL_weightedmeans <- NCRMP_DRM_SEFCRI_Occ_Den_CV"
"0","    #filter(YEAR == max(YEAR, na.rm = TRUE))"
"0","  "
"0","  om <- NCRMP_DRM_calculate_mortality(region = ""SEFCRI"", project = ""NCRMP_DRM"")"
"0","  SEFL_om_spp <- om$Domain_est_old_mort_species"
"0","  SEFL_rm_spp <- om$Domain_est_rec_mort_species"
"0","  "
"0","  s <- NCRMP_DRM_calculate_mean_colony_size(region = ""SEFCRI"", project = ""NCRMP_DRM"")"
"0","  SEFL_s_spp <- s$Domain_est_species"
"0","  "
"0","  generateCoralPlot(""Southeast Florida"", selected_year, SEFL_weightedmeans, SEFL_om_spp, SEFL_s_spp, SEFL_rm_spp, species_list)"
"0","}"
"0","    "
"0","    "
"0","    else if (selected_region == ""Florida Keys"") {"
"0","      FLK_weightedmeans <- NCRMP_DRM_FLK_Occ_Den_CV"
"0","      #, YEAR == max(NCRMP_DRM_FLK_Occ_Den_CV$YEAR))"
"0","      om <- NCRMP_DRM_calculate_mortality(region = ""FLK"", project = ""NCRMP_DRM"")"
"0","      FLK_om_spp <- om$Domain_est_old_mort_species"
"0","      FLK_rm_spp <- om$Domain_est_rec_mort_species"
"0","      "
"0","      # load species specific size - using max diameter here because DRM doesn't collect what's needed for area or volume"
"0","      # note this is not standardized by mortality though***"
"0","      s <- NCRMP_DRM_calculate_mean_colony_size(region = ""FLK"", project = ""NCRMP_DRM"")"
"0","      FLK_s_spp <- s$Domain_est_species"
"0","      generateCoralPlot(""Florida Keys"",selected_year, FLK_weightedmeans, FLK_om_spp, FLK_s_spp, FLK_rm_spp, species_list)"
"0","    }"
"0","       "
"0","  "
"0"," "
"0","})"
"0","  "
"0",""
"0",""
"0","  output$benthic_plot <- renderPlotly({"
"0","    "
"0","    selected_regions <- input$region"
"0","    "
"0","    selected_covers <- input$cover"
"0","    "
"0","    if (is.null(selected_regions)) {"
"0","      return(plot_ly())  "
"0","    }"
"0",""
"0","    selected_years <- as.character(input$year[1]:input$year[2])"
"0",""
"0",""
"0","    plot_list <- list()"
"0",""
"0","    for (region_name in selected_regions) {"
"0","      region_data <- switch("
"0","        region_name,"
"0","        ""Dry Tortugas"" = NCRMP_Tort_2014_22_cover_region %>% dplyr::mutate(YEAR = ifelse(YEAR == 2020, 2021, as.numeric(YEAR))),"
"0","        ""Southeast Florida"" = NCRMP_SEFCRI_2014_22_cover_region,"
"0","        ""Florida Keys"" = NCRMP_FLK_2014_22_cover_region %>% filter(YEAR != 2020),"
"0","        NULL"
"0","      )"
"0",""
"0","      "
"0","      if (!is.null(region_data)) {"
"0","        plot_list[[region_name]] <- generateRegionPlot(region_data, selected_years, region_name, selected_covers)"
"0","      }"
"0","    }"
"0",""
"0","    final_plot <- subplot(plot_list) %>% layout(title = 'Coral Coverage by Region')"
"0","    return(final_plot)"
"0","  })"
"0","}"
"0",""
"0","shinyApp(ui, server)"
"2","
Listening on http://127.0.0.1:4572
"
"2","Warning: Unknown or uninitialised column: `Std_Dev`."
"2","
Attaching package: âggthemesâ

"
"2","The following object is masked from âpackage:cowplotâ:

    theme_map

"
"2","Registering fonts with R
"
"2","Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.
Please use the `linewidth` argument instead."
"2","Warning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.
Please use the `linewidth` argument instead."
"2","Warning: Unknown or uninitialised column: `Std_Dev`."
"2","Warning: Unknown or uninitialised column: `Std_Dev`."
